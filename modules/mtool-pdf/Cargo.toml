[package]
name = "mtool-pdf"
version.workspace = true
authors.workspace = true
edition.workspace = true
links = "mtool-pdf"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
mapp = { path = "../../crates/mapp" }
mtauri-sys = { path = "../../crates/mtauri-sys" }
mtool-cmder = { path = "../mtool-cmder" }
mtool-wgui = { path = "../mtool-wgui" }
mtool-interactive = { path = "../mtool-interactive" }

clap = { workspace = true }
tracing = { workspace = true }
tokio = { workspace = true }
parking_lot = { workspace = true }
futures = { workspace = true }
async-trait = { workspace = true }
anyhow = { workspace = true }
thiserror = { workspace = true }
yew = { workspace = true }
serde = { workspace = true }
serde-error = { workspace = true }
serde_json = { workspace = true }
wasm-bindgen = { workspace = true }
wasm-bindgen-futures = { workspace = true }
cfg-if = { workspace = true }
js-sys = { workspace = true }
ouroboros = { workspace = true }
itertools = { workspace = true }
send_wrapper = { workspace = true }

gloo-utils = "*"
base64 = "*"
glam = "*"

[dependencies.web-sys]
workspace = true
features = [
  "Document",
  "Navigator",
  "Element",
  "HtmlCanvasElement",
  "CanvasRenderingContext2d",
  "ImageData",
  "WheelEvent",
]

[target.'cfg(not(target_family = "wasm"))'.dependencies]
mcloud-api = { path = "../../crates/mcloud-api" }
mtool-core = { path = "../mtool-core" }
mtool-storage = { path = "../mtool-storage" }

tauri = { workspace = true }
quick-xml = { workspace = true, features = ["async-tokio"] }
sea-orm = { workspace = true }
sea-orm-migration = { workspace = true }
tokio-stream = { workspace = true, features = ["sync"] }

raw-window-handle = { workspace = true }
raw-window-handle5 = { version = "0.5", package = "raw-window-handle" }
md5 = "*"

[target.'cfg(target_os = "linux")'.dependencies]
gtk = "*"
gl = "*"
glutin = "*"
skia-safe = { version = "0.71", features = ["gpu", "gl"] }


[target.'cfg(target_os = "windows")'.dependencies]
webview2-com = "*"
skia-safe = { version = "0.71", features = ["gpu", "d3d"] }

[target.'cfg(target_os = "windows")'.dependencies.windows]
workspace = true
features = [
  "System",
  "implement",
  "Win32_UI_Controls",
  "Win32_UI_Input_KeyboardAndMouse",
  "Win32_UI_Shell",
  "Win32_UI_WindowsAndMessaging",
  "Win32_Security",
  "Win32_Foundation",
  "Win32_System_WinRT",
  "Win32_System_WinRT_Composition",
  "Win32_System_Threading",
  "Foundation_Numerics",
  "UI_Composition",
  "UI_Composition_Desktop",
  "Win32_Graphics_Gdi",
  "Win32_Graphics_Dxgi",
  "Win32_Graphics_Dxgi_Common",
  "Win32_Graphics_Direct3D",
  "Win32_Graphics_Direct3D12"
]

[target.'cfg(target_os = "windows")'.dependencies.winapi]
version = "*"

[target.'cfg(not(target_family = "wasm"))'.dependencies.pdfium-render]
git = "https://github.com/yydcnjjw/pdfium-render"
branch = "master"
features = ["image", "sync"]

[build-dependencies]
tauri-plugin = { workspace = true }
