use crate::event;
use std::os::raw::c_uint;
use x11::keysym;

pub struct KeySym(pub c_uint);

// impl From<KeySym> for event::KeySym {
//     fn from(v: KeySym) -> Self {
//         match v.0 {
//             keysym::XK_space => event::KeySym::Space,
//             keysym::XK_apostrophe => event::KeySym::Apostrophe,
//             keysym::XK_comma => event::KeySym::Comma,
//             keysym::XK_minus => event::KeySym::Minus,
//             keysym::XK_period => event::KeySym::Period,
//             keysym::XK_slash => event::KeySym::Slash,
//             keysym::XK_semicolon => event::KeySym::Semicolon,
//             keysym::XK_equal => event::KeySym::Equal,
//             keysym::XK_bracketleft => event::KeySym::LeftBacket,
//             keysym::XK_backslash => event::KeySym::Backslash,
//             keysym::XK_bracketright => event::KeySym::RightBacket,
//             keysym::XK_grave => event::KeySym::GraveAccent,
//             keysym::XK_0 => event::KeySym::Num0,
//             keysym::XK_1 => event::KeySym::Num1,
//             keysym::XK_2 => event::KeySym::Num2,
//             keysym::XK_3 => event::KeySym::Num3,
//             keysym::XK_4 => event::KeySym::Num4,
//             keysym::XK_5 => event::KeySym::Num5,
//             keysym::XK_6 => event::KeySym::Num6,
//             keysym::XK_7 => event::KeySym::Num7,
//             keysym::XK_8 => event::KeySym::Num8,
//             keysym::XK_9 => event::KeySym::Num9,
//             keysym::XK_a => event::KeySym::A,
//             keysym::XK_b => event::KeySym::B,
//             keysym::XK_c => event::KeySym::C,
//             keysym::XK_d => event::KeySym::D,
//             keysym::XK_e => event::KeySym::E,
//             keysym::XK_f => event::KeySym::F,
//             keysym::XK_g => event::KeySym::G,
//             keysym::XK_h => event::KeySym::H,
//             keysym::XK_i => event::KeySym::I,
//             keysym::XK_j => event::KeySym::J,
//             keysym::XK_k => event::KeySym::K,
//             keysym::XK_l => event::KeySym::L,
//             keysym::XK_m => event::KeySym::M,
//             keysym::XK_n => event::KeySym::N,
//             keysym::XK_o => event::KeySym::O,
//             keysym::XK_p => event::KeySym::P,
//             keysym::XK_q => event::KeySym::Q,
//             keysym::XK_r => event::KeySym::R,
//             keysym::XK_s => event::KeySym::S,
//             keysym::XK_t => event::KeySym::T,
//             keysym::XK_u => event::KeySym::U,
//             keysym::XK_v => event::KeySym::V,
//             keysym::XK_w => event::KeySym::W,
//             keysym::XK_x => event::KeySym::X,
//             keysym::XK_y => event::KeySym::Y,
//             keysym::XK_z => event::KeySym::Z,
//             keysym::XK_F1 => event::KeySym::F1,
//             keysym::XK_F2 => event::KeySym::F2,
//             keysym::XK_F3 => event::KeySym::F3,
//             keysym::XK_F4 => event::KeySym::F4,
//             keysym::XK_F5 => event::KeySym::F5,
//             keysym::XK_F6 => event::KeySym::F6,
//             keysym::XK_F7 => event::KeySym::F7,
//             keysym::XK_F8 => event::KeySym::F8,
//             keysym::XK_F9 => event::KeySym::F9,
//             keysym::XK_F10 => event::KeySym::F10,
//             keysym::XK_F11 => event::KeySym::F11,
//             keysym::XK_F12 => event::KeySym::F12,
//             keysym::XK_Escape => event::KeySym::Escape,
//             keysym::XK_Return => event::KeySym::Enter,
//             keysym::XK_Tab => event::KeySym::Tab,
//             keysym::XK_BackSpace => event::KeySym::BackSpace,
//             keysym::XK_Insert => event::KeySym::Insert,
//             keysym::XK_Delete => event::KeySym::Delete,
//             keysym::XK_Right => event::KeySym::Right,
//             keysym::XK_Left => event::KeySym::Left,
//             keysym::XK_Down => event::KeySym::Down,
//             keysym::XK_Up => event::KeySym::Up,
//             keysym::XK_Page_Up => event::KeySym::PageUp,
//             keysym::XK_Page_Down => event::KeySym::PageDown,
//             keysym::XK_Home => event::KeySym::Home,
//             keysym::XK_End => event::KeySym::End,
//             keysym::XK_Caps_Lock => event::KeySym::CapsLock,
//             keysym::XK_Scroll_Lock => event::KeySym::ScrollLock,
//             keysym::XK_Num_Lock => event::KeySym::NumLock,
//             keysym::XK_Print => event::KeySym::PrintScreen,
//             keysym::XK_Pause => event::KeySym::Pause,
//             keysym::XK_KP_0 => event::KeySym::Kp0,
//             keysym::XK_KP_1 => event::KeySym::KP_1,
//             keysym::XK_KP_2 => event::KeySym::KP_2,
//             keysym::XK_KP_3 => event::KeySym::KP_3,
//             keysym::XK_KP_4 => event::KeySym::KP_4,
//             keysym::XK_KP_5 => event::KeySym::KP_5,
//             keysym::XK_KP_6 => event::KeySym::KP_6,
//             keysym::XK_KP_7 => event::KeySym::KP_7,
//             keysym::XK_KP_8 => event::KeySym::KP_8,
//             keysym::XK_KP_9 => event::KeySym::KP_9,
//             keysym::XK_KP_Decimal => event::KeySym::KP_Decimal,
//             keysym::XK_KP_Divide => event::KeySym::KP_Divide,
//             keysym::XK_KP_Multiply => event::KeySym::KP_Multiply,
//             keysym::XK_KP_Subtract => event::KeySym::KP_Subtract,
//             keysym::XK_KP_Add => event::KeySym::KP_Add,
//             keysym::XK_KP_Enter => event::KeySym::KP_Enter,
//             keysym::XK_KP_Equal => event::KeySym::KP_Equal,
//             keysym::XK_Shift_L => event::KeySym::LeftShift,
//             keysym::XK_Control_L => event::KeySym::LeftControl,
//             keysym::XK_Alt_L => event::KeySym::LeftAlt,
//             keysym::XK_Super_L => event::KeySym::LeftSuper,
//             keysym::XK_Shift_R => event::KeySym::RightShift,
//             keysym::XK_Control_R => event::KeySym::RightControl,
//             keysym::XK_Alt_R => event::KeySym::RightAlt,
//             keysym::XK_Super_R => event::KeySym::RightSuper,
//             keysym::XK_Menu => event::KeySym::Menu,
//             _ => panic!("Unknown key: {}", v.0),
//         }
//     }
// }

// impl From<event::KeySym> for KeySym {
//     fn from(v: event::KeySym) -> Self {
//         Self(match v {
//             event::KeySym::Space => keysym::XK_space,
//             event::KeySym::Apostrophe => keysym::XK_apostrophe,
//             event::KeySym::Comma => keysym::XK_comma,
//             event::KeySym::Minus => keysym::XK_minus,
//             event::KeySym::Period => keysym::XK_period,
//             event::KeySym::Slash => keysym::XK_slash,
//             event::KeySym::Semicolon => keysym::XK_semicolon,
//             event::KeySym::Equal => keysym::XK_equal,
//             event::KeySym::LeftBacket => keysym::XK_bracketleft,
//             event::KeySym::Backslash => keysym::XK_backslash,
//             event::KeySym::RightBacket => keysym::XK_bracketright,
//             event::KeySym::GraveAccent => keysym::XK_grave,
//             event::KeySym::Num0 => keysym::XK_0,
//             event::KeySym::Num1 => keysym::XK_1,
//             event::KeySym::Num2 => keysym::XK_2,
//             event::KeySym::Num3 => keysym::XK_3,
//             event::KeySym::Num4 => keysym::XK_4,
//             event::KeySym::Num5 => keysym::XK_5,
//             event::KeySym::Num6 => keysym::XK_6,
//             event::KeySym::Num7 => keysym::XK_7,
//             event::KeySym::Num8 => keysym::XK_8,
//             event::KeySym::Num9 => keysym::XK_9,
//             event::KeySym::A => keysym::XK_A,
//             event::KeySym::B => keysym::XK_B,
//             event::KeySym::C => keysym::XK_C,
//             event::KeySym::D => keysym::XK_D,
//             event::KeySym::E => keysym::XK_E,
//             event::KeySym::F => keysym::XK_F,
//             event::KeySym::G => keysym::XK_G,
//             event::KeySym::H => keysym::XK_H,
//             event::KeySym::I => keysym::XK_I,
//             event::KeySym::J => keysym::XK_J,
//             event::KeySym::K => keysym::XK_K,
//             event::KeySym::L => keysym::XK_L,
//             event::KeySym::M => keysym::XK_M,
//             event::KeySym::N => keysym::XK_N,
//             event::KeySym::O => keysym::XK_O,
//             event::KeySym::P => keysym::XK_P,
//             event::KeySym::Q => keysym::XK_Q,
//             event::KeySym::R => keysym::XK_R,
//             event::KeySym::S => keysym::XK_S,
//             event::KeySym::T => keysym::XK_T,
//             event::KeySym::U => keysym::XK_U,
//             event::KeySym::V => keysym::XK_V,
//             event::KeySym::W => keysym::XK_W,
//             event::KeySym::X => keysym::XK_X,
//             event::KeySym::Y => keysym::XK_Y,
//             event::KeySym::Z => keysym::XK_Z,
//             event::KeySym::F1 => keysym::XK_F1,
//             event::KeySym::F2 => keysym::XK_F2,
//             event::KeySym::F3 => keysym::XK_F3,
//             event::KeySym::F4 => keysym::XK_F4,
//             event::KeySym::F5 => keysym::XK_F5,
//             event::KeySym::F6 => keysym::XK_F6,
//             event::KeySym::F7 => keysym::XK_F7,
//             event::KeySym::F8 => keysym::XK_F8,
//             event::KeySym::F9 => keysym::XK_F9,
//             event::KeySym::F10 => keysym::XK_F10,
//             event::KeySym::F11 => keysym::XK_F11,
//             event::KeySym::F12 => keysym::XK_F12,
//             event::KeySym::Escape => keysym::XK_Escape,
//             event::KeySym::Enter => keysym::XK_Return,
//             event::KeySym::Tab => keysym::XK_Tab,
//             event::KeySym::BackSpace => keysym::XK_BackSpace,
//             event::KeySym::Insert => keysym::XK_Insert,
//             event::KeySym::Delete => keysym::XK_Delete,
//             event::KeySym::Right => keysym::XK_Right,
//             event::KeySym::Left => keysym::XK_Left,
//             event::KeySym::Down => keysym::XK_Down,
//             event::KeySym::Up => keysym::XK_Up,
//             event::KeySym::PageUp => keysym::XK_Page_Up,
//             event::KeySym::PageDown => keysym::XK_Page_Down,
//             event::KeySym::Home => keysym::XK_Home,
//             event::KeySym::End => keysym::XK_End,
//             event::KeySym::CapsLock => keysym::XK_Caps_Lock,
//             event::KeySym::ScrollLock => keysym::XK_Scroll_Lock,
//             event::KeySym::NumLock => keysym::XK_Num_Lock,
//             event::KeySym::PrintScreen => keysym::XK_Print,
//             event::KeySym::Pause => keysym::XK_Pause,
//             event::KeySym::Kp0 => keysym::XK_KP_0,
//             event::KeySym::KP_1 => keysym::XK_KP_1,
//             event::KeySym::KP_2 => keysym::XK_KP_2,
//             event::KeySym::KP_3 => keysym::XK_KP_3,
//             event::KeySym::KP_4 => keysym::XK_KP_4,
//             event::KeySym::KP_5 => keysym::XK_KP_5,
//             event::KeySym::KP_6 => keysym::XK_KP_6,
//             event::KeySym::KP_7 => keysym::XK_KP_7,
//             event::KeySym::KP_8 => keysym::XK_KP_8,
//             event::KeySym::KP_9 => keysym::XK_KP_9,
//             event::KeySym::KP_Decimal => keysym::XK_KP_Decimal,
//             event::KeySym::KP_Divide => keysym::XK_KP_Divide,
//             event::KeySym::KP_Multiply => keysym::XK_KP_Multiply,
//             event::KeySym::KP_Subtract => keysym::XK_KP_Subtract,
//             event::KeySym::KP_Add => keysym::XK_KP_Add,
//             event::KeySym::KP_Enter => keysym::XK_KP_Enter,
//             event::KeySym::KP_Equal => keysym::XK_KP_Equal,
//             event::KeySym::LeftShift => keysym::XK_Shift_L,
//             event::KeySym::LeftControl => keysym::XK_Control_L,
//             event::KeySym::LeftAlt => keysym::XK_Alt_L,
//             event::KeySym::LeftSuper => keysym::XK_Super_L,
//             event::KeySym::RightShift => keysym::XK_Shift_R,
//             event::KeySym::RightControl => keysym::XK_Control_R,
//             event::KeySym::RightAlt => keysym::XK_Alt_R,
//             event::KeySym::RightSuper => keysym::XK_Super_R,
//             event::KeySym::Menu => keysym::XK_Menu,
//         })
//     }
// }
